{"version":3,"sources":["create_bucket.js"],"names":["ctx","data","response","name","region","AMAZON_KEY","args","config","Error","s3instance","createBucket","Bucket","err","res","json","newBucketClass","bucket","create","error","message"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;+BACe,WAAMA,GAAN,EAAa;AAC1B,UAAM,EAACC,IAAD,EAAOC,QAAP,KAAmB,6BAAOF,GAAP,CAAzB;AACA,UAAM,EAACG,IAAD,EAAOC,MAAP,EAAeC,UAAf,KAA6BL,IAAIM,IAAvC;AACA,QAAI;AACF,UAAID,eAAeL,IAAIO,MAAJ,CAAWF,UAA9B,EAA0C;AACxC,cAAM,IAAIG,KAAJ,CAAU,gBAAV,CAAN;AACD;AACD,YAAMC,aAAa,iBAAG,EAACT,GAAD,EAAMI,MAAN,EAAH,CAAnB;AACAK,iBAAWC,YAAX,CACE;AACEC,gBAAQR;AADV,OADF;AAAA,sCAIE,WAAgBS,GAAhB,EAAqBC,GAArB,EAA0B;AACxB,cAAID,GAAJ,EAAS;AACP,mBAAOV,SAASY,IAAT,CAAc,EAACF,GAAD,EAAd,EAAqB,GAArB,CAAP;AACD,WAFD,MAEO;AACL,kBAAMG,iBAAiB,MAAMd,KAAKe,MAAL,CAAYC,MAAZ,CAAmB,EAACd,IAAD,EAAnB,CAA7B;AACA,mBAAOD,SAASY,IAAT,CAAcD,GAAd,CAAP;AACD;AACF,SAXH;;AAAA;AAAA;AAAA;AAAA;AAaD,KAlBD,CAkBE,OAAOK,KAAP,EAAc;AACd,aAAOhB,SAASY,IAAT,CAAcI,MAAMC,OAApB,EAA6B,GAA7B,CAAP;AACD;AACF,G","file":"create_bucket.js","sourcesContent":["import Server from 'syncano-server'\nimport AWS from 'aws-sdk'\nimport s3 from './helpers/s3'\nexport default async ctx => {\n  const {data, response} = Server(ctx)\n  const {name, region, AMAZON_KEY} = ctx.args\n  try {\n    if (AMAZON_KEY !== ctx.config.AMAZON_KEY) {\n      throw new Error('Bad amazon key')\n    }\n    const s3instance = s3({ctx, region})\n    s3instance.createBucket(\n      {\n        Bucket: name\n      },\n      async function (err, res) {\n        if (err) {\n          return response.json({err}, 400)\n        } else {\n          const newBucketClass = await data.bucket.create({name})\n          return response.json(res)\n        }\n      }\n    )\n  } catch (error) {\n    return response.json(error.message, 400)\n  }\n}\n"]}